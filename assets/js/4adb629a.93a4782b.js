"use strict";(self.webpackChunk_assetpack_docs=self.webpackChunk_assetpack_docs||[]).push([[102],{3926:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=n(1085),s=n(1184);const o={sidebar_position:3,title:"Vite"},a="Vite Plugin",r={id:"guide/getting-started/vite",title:"Vite",description:"Below is an example of how to use AssetPack with Vite.",source:"@site/docs/guide/getting-started/vite.md",sourceDirName:"guide/getting-started",slug:"/guide/getting-started/vite",permalink:"/assetpack/docs/guide/getting-started/vite",draft:!1,unlisted:!1,editUrl:"https://github.com/pixijs/assetpack/tree/main/packages/docs/docs/guide/getting-started/vite.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Vite"},sidebar:"guide",previous:{title:"Programmatic",permalink:"/assetpack/docs/guide/getting-started/programmatic"},next:{title:"Github Action",permalink:"/assetpack/docs/guide/getting-started/github-action"}},c={},d=[];function p(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"vite-plugin",children:"Vite Plugin"}),"\n",(0,i.jsx)(t.p,{children:"Below is an example of how to use AssetPack with Vite."}),"\n",(0,i.jsxs)(t.p,{children:["To see a full list of configuration options, see the ",(0,i.jsx)(t.a,{href:"/docs/guide/configuration",children:"API Reference"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"// vite.config.mts\nimport { defineConfig, type Plugin, type ResolvedConfig } from 'vite';\nimport { AssetPack, type AssetPackConfig  } from '@assetpack/core';\n\nfunction assetpackPlugin(): Plugin {\n    const apConfig: AssetPackConfig = {\n        entry: './raw-assets',\n        pipes: [\n            // Add your pipes here\n        ],\n    };\n    let mode: ResolvedConfig['command'];\n    let ap: AssetPack | undefined;\n\n    return {\n        name: 'vite-plugin-assetpack',\n        configResolved(resolvedConfig) {\n            mode = resolvedConfig.command;\n            if (!resolvedConfig.publicDir) return;\n            if (apConfig.output) return;\n            const publicDir = resolvedConfig.publicDir.replace(process.cwd(), '');\n            apConfig.output = `.${publicDir}/assets/`;\n        },\n        buildStart: async () => {\n            if (mode === 'serve') {\n                if (ap) return;\n                ap = new AssetPack(apConfig);\n                void ap.watch();\n            } else {\n                await new AssetPack(apConfig).run();\n            }\n        },\n        buildEnd: async () => {\n            if (ap) {\n                await ap.stop();\n                ap = undefined;\n            }\n        },\n    };\n}\n\nexport default defineConfig({\n  plugins: [\n    assetpackPlugin(),\n  ],\n})\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(4041);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);