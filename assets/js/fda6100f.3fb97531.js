"use strict";(self.webpackChunk_assetpack_docs=self.webpackChunk_assetpack_docs||[]).push([[57],{1184:(e,s,i)=>{i.d(s,{R:()=>p,x:()=>r});var n=i(4041);const t={},o=n.createContext(t);function p(e){const s=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:p(e.components),n.createElement(o.Provider,{value:s},e.children)}},4748:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>p,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"guide/pipes/json","title":"JSON","description":"AssetPack plugin for minifying JSON files. This plugin simplifies JSON files by removing whitespace, reducing file size and improving load times.","source":"@site/docs/guide/pipes/json.md","sourceDirName":"guide/pipes","slug":"/guide/pipes/json","permalink":"/assetpack/docs/guide/pipes/json","draft":false,"unlisted":false,"editUrl":"https://github.com/pixijs/assetpack/tree/main/packages/docs/docs/guide/pipes/json.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"guide","previous":{"title":"Audio & FFmpeg","permalink":"/assetpack/docs/guide/pipes/ffmpeg"},"next":{"title":"Compression","permalink":"/assetpack/docs/guide/pipes/compress"}}');var t=i(1085),o=i(1184);const p={sidebar_position:3},r="JSON",a={},c=[{value:"Example",id:"example",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"json",children:"JSON"})}),"\n",(0,t.jsx)(s.p,{children:"AssetPack plugin for minifying JSON files. This plugin simplifies JSON files by removing whitespace, reducing file size and improving load times."}),"\n",(0,t.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:'import { json } from "@assetpack/core/json";\n\nexport default {\n  ...\n  pipes: [\n    ...\n    json(),\n  ],\n};\n'})})]})}function l(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);